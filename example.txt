Exemples de requêtes :

GET /index.php?user=admin&action=view
GET /login.php?username=admin' OR '1'='1&password=1234

SELECT * FROM users WHERE id IN (1, 2, 3);
INSERT INTO payments (user_id, amount) VALUES (15, 99.99);
UPDATE orders SET status = 'confirmed' WHERE order_id = 444;

SELECT * FROM users WHERE username = 'admin' AND SLEEP(5);
SELECT * FROM accounts WHERE email = 'test' OR 'a' = 'a';
SELECT * FROM login WHERE user = 'admin' /*!40101 AND 1=1 */;
SELECT * FROM users WHERE username = 'admin'; EXEC xp_cmdshell('dir'); --
SELECT * FROM users WHERE id = 1 OR 1=1 --


in my sql injection detection app , i want to improve the prediction because what i did until now
gave me results that doesn't make sens , normal sql req the model say that they are injected or the opposit 

demo/
│
├── demo.py
├── SQL_Injec_NormTrain.csv
├── SQL_Injec_Test.csv
├── SQL_Injec_Valid.csv
├── autre...
│
├── templates/
│   └── http.html
│   └── sql.html
│   └── index.html
│
├── static/
│   └── script.js
│   └── style.css
│
└── models/
    ├── http_model.py
    └── sql_model.py


Voila quelque lignes aletoire dans les dataset
61 179 lignes → train  SQL_Injec_NormTrain.csv
LABEL	LONGUEUR	SCORE_INJECTION	NB_KEYWORDS	NB_SPECIAL_CHARS	NB_QUOTES	NB_COMMENT_SYNTAX	RATIO_SCORE_LONGUEUR	SCORE_COMPLEXITE	CONTIENT_OR	CONTIENT_QUOTE	CONTIENT_COMMENT	CONTIENT_UNION	CONTIENT_EQUAL	CONTIENT_PARENTHESES	CONTIENT_TIME	CONTIENT_FUNCTION	CLASSE_LONGUEUR	LONGUEUR_NORM	SCORE_INJECTION_NORM	NB_KEYWORDS_NORM	NB_SPECIAL_CHAR_NORM	NB_QUOTES_NORM	NB_COMMENTS_NORM	RATIO_SCORE_LONGUEUR_NORM	SCORE_COMPLEXITE_NORM
1	81	5	7	10	3	1	0.061728395	0.209876543	0	1	1	1	1	1	0	0	1	0.143369176	0.714285714	0.388888889	0.125	0.230769231	0.25	0.12345679	0.139917695
1	70	3	3	10	4	1	0.042857143	0.185714286	0	1	1	0	0	1	0	0	1	0.123655914	0.428571429	0.166666667	0.125	0.307692308	0.25	0.085714286	0.123809524
0	11	0	0	1	0	0	0	0.090909091	0	0	0	0	0	0	0	0	0	0.017921147	0	0	0.0125	0	0	0	0.060606061
0	11	0	0	1	0	0	0	0.090909091	0	0	0	0	0	0	0	0	0	0.017921147	0	0	0.0125	0	0	0	0.060606061

6 101 lignes → validation  SQL_Injec_Valid.csv
LABEL	LONGUEUR	SCORE_INJECTION	NB_KEYWORDS	NB_SPECIAL_CHARS	NB_QUOTES	NB_COMMENT_SYNTAX	RATIO_SCORE_LONGUEUR	SCORE_COMPLEXITE	CONTIENT_OR	CONTIENT_QUOTE	CONTIENT_COMMENT	CONTIENT_UNION	CONTIENT_EQUAL	CONTIENT_PARENTHESES	CONTIENT_TIME	CONTIENT_FUNCTION	CLASSE_LONGUEUR	LONGUEUR_NORM	SCORE_INJECTION_NORM	NB_KEYWORDS_NORM	NB_SPECIAL_CHAR_NORM	NB_QUOTES_NORM	NB_COMMENTS_NORM	RATIO_SCORE_LONGUEUR_NORM	SCORE_COMPLEXITE_NORM
1	76	4	7	7	0	1	0.052631579	0.184210526	0	0	1	1	1	1	0	0	1	0.134408602	0.571428571	0.388888889	0.0875	0	0.25	0.105263158	0.122807018
1	155	4	4	13	3	0	0.025806452	0.109677419	0	1	0	1	1	1	0	0	2	0.275985663	0.571428571	0.222222222	0.1625	0.230769231	0	0.051612903	0.07311828
0	38	2	4	3	2	0	0.052631579	0.184210526	0	1	0	0	1	0	0	0	1	0.066308244	0.285714286	0.222222222	0.0375	0.153846154	0	0.105263158	0.122807018
0	50	3	3	3	2	0	0.06	0.12	0	1	0	1	1	0	0	0	1	0.08781362	0.428571429	0.166666667	0.0375	0.153846154	0	0.12	0.08

12 226 lignes → test SQL_Injec_Test.csv
LABEL	LONGUEUR	SCORE_INJECTION	NB_KEYWORDS	NB_SPECIAL_CHARS	NB_QUOTES	NB_COMMENT_SYNTAX	RATIO_SCORE_LONGUEUR	SCORE_COMPLEXITE	CONTIENT_OR	CONTIENT_QUOTE	CONTIENT_COMMENT	CONTIENT_UNION	CONTIENT_EQUAL	CONTIENT_PARENTHESES	CONTIENT_TIME	CONTIENT_FUNCTION	CLASSE_LONGUEUR	LONGUEUR_NORM	SCORE_INJECTION_NORM	NB_KEYWORDS_NORM	NB_SPECIAL_CHAR_NORM	NB_QUOTES_NORM	NB_COMMENTS_NORM	RATIO_SCORE_LONGUEUR_NORM	SCORE_COMPLEXITE_NORM
1	15	4	2	4	1	1	0.266666667	0.4	1	1	1	0	1	0	0	0	0	0.025089606	0.571428571	0.111111111	0.05	0.076923077	0.25	0.533333333	0.266666667
1	81	5	7	9	3	1	0.061728395	0.197530864	0	1	1	1	1	1	0	0	1	0.143369176	0.714285714	0.388888889	0.1125	0.230769231	0.25	0.12345679	0.131687243
0	64	3	3	3	2	0	0.046875	0.09375	0	1	0	1	1	0	0	0	1	0.112903226	0.428571429	0.166666667	0.0375	0.153846154	0	0.09375	0.0625
0	43	2	4	2	0	0	0.046511628	0.139534884	0	0	0	1	0	1	0	0	1	0.075268817	0.285714286	0.222222222	0.025	0	0	0.093023256	0.093023256
